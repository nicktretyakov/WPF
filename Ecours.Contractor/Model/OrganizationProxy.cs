//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ecours.Proxy
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EA_VC_ORGANIZATION", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class EA_VC_ORGANIZATION : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
    [System.SerializableAttribute()]
    public partial class FaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Ecours.Proxy.IServiceOrganization")]
    public interface IServiceOrganization
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Get", ReplyAction="http://tempuri.org/IServiceOrganization/GetResponse")]
        Ecours.Proxy.EA_VC_ORGANIZATION Get(string FieldNameId, int Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Get", ReplyAction="http://tempuri.org/IServiceOrganization/GetResponse")]
        System.Threading.Tasks.Task<Ecours.Proxy.EA_VC_ORGANIZATION> GetAsync(string FieldNameId, int Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/All", ReplyAction="http://tempuri.org/IServiceOrganization/AllResponse")]
        System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION> All(string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/All", ReplyAction="http://tempuri.org/IServiceOrganization/AllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION>> AllAsync(string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Insert", ReplyAction="http://tempuri.org/IServiceOrganization/InsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ecours.Proxy.FaultMessage), Action="https://www.ecours.ru/FaultMessage", Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
        void Insert(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Insert", ReplyAction="http://tempuri.org/IServiceOrganization/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrganizationChannel : Ecours.Proxy.IServiceOrganization, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrganizationClient : System.ServiceModel.ClientBase<Ecours.Proxy.IServiceOrganization>, Ecours.Proxy.IServiceOrganization
    {
        
        public ServiceOrganizationClient()
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceOrganizationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public Ecours.Proxy.EA_VC_ORGANIZATION Get(string FieldNameId, int Value)
        {
            return base.Channel.Get(FieldNameId, Value);
        }
        
        public System.Threading.Tasks.Task<Ecours.Proxy.EA_VC_ORGANIZATION> GetAsync(string FieldNameId, int Value)
        {
            return base.Channel.GetAsync(FieldNameId, Value);
        }
        
        public System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION> All(string orderBy)
        {
            return base.Channel.All(orderBy);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION>> AllAsync(string orderBy)
        {
            return base.Channel.AllAsync(orderBy);
        }
        
        public void Insert(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            base.Channel.Insert(ea_vc_organization);
        }
        
        public System.Threading.Tasks.Task InsertAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            return base.Channel.InsertAsync(ea_vc_organization);
        }
    }
}
