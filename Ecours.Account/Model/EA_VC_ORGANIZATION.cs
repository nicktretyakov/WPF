//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ecours.Proxy
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EA_VC_ORGANIZATION", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class EA_VC_ORGANIZATION : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Addr_StrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Egrul_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Egrulip_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] Freg_Obj_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Head_ContField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Id_ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Id_PorgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Id_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Id_Sub_OrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Is_MainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Legal_FormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoginidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OgrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OkatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Okato_JurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Okato_PhisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OkopfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Okpd2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OkpoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Okved_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Org_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Org_LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short Org_ScaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Reg_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Reg_Gos_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Reg_Obj_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Sc_OrgcontacttableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Sep_DivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SubnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ter_RosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Account
        {
            get
            {
                return this.AccountField;
            }
            set
            {
                if ((this.AccountField.Equals(value) != true))
                {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Addr
        {
            get
            {
                return this.AddrField;
            }
            set
            {
                if ((this.AddrField.Equals(value) != true))
                {
                    this.AddrField = value;
                    this.RaisePropertyChanged("Addr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addr_Str
        {
            get
            {
                return this.Addr_StrField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Addr_StrField, value) != true))
                {
                    this.Addr_StrField = value;
                    this.RaisePropertyChanged("Addr_Str");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Aposition
        {
            get
            {
                return this.ApositionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ApositionField, value) != true))
                {
                    this.ApositionField = value;
                    this.RaisePropertyChanged("Aposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Block
        {
            get
            {
                return this.BlockField;
            }
            set
            {
                if ((this.BlockField.Equals(value) != true))
                {
                    this.BlockField = value;
                    this.RaisePropertyChanged("Block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Egrul_Date
        {
            get
            {
                return this.Egrul_DateField;
            }
            set
            {
                if ((this.Egrul_DateField.Equals(value) != true))
                {
                    this.Egrul_DateField = value;
                    this.RaisePropertyChanged("Egrul_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Egrulip_Num
        {
            get
            {
                return this.Egrulip_NumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Egrulip_NumField, value) != true))
                {
                    this.Egrulip_NumField = value;
                    this.RaisePropertyChanged("Egrulip_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EmailField, value) != true))
                {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname
        {
            get
            {
                return this.FnameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FnameField, value) != true))
                {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Freg_Obj_Code
        {
            get
            {
                return this.Freg_Obj_CodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Freg_Obj_CodeField, value) != true))
                {
                    this.Freg_Obj_CodeField = value;
                    this.RaisePropertyChanged("Freg_Obj_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Head_Cont
        {
            get
            {
                return this.Head_ContField;
            }
            set
            {
                if ((this.Head_ContField.Equals(value) != true))
                {
                    this.Head_ContField = value;
                    this.RaisePropertyChanged("Head_Cont");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id_Parent
        {
            get
            {
                return this.Id_ParentField;
            }
            set
            {
                if ((this.Id_ParentField.Equals(value) != true))
                {
                    this.Id_ParentField = value;
                    this.RaisePropertyChanged("Id_Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_Porg
        {
            get
            {
                return this.Id_PorgField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Id_PorgField, value) != true))
                {
                    this.Id_PorgField = value;
                    this.RaisePropertyChanged("Id_Porg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id_Status
        {
            get
            {
                return this.Id_StatusField;
            }
            set
            {
                if ((this.Id_StatusField.Equals(value) != true))
                {
                    this.Id_StatusField = value;
                    this.RaisePropertyChanged("Id_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_Sub_Org
        {
            get
            {
                return this.Id_Sub_OrgField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Id_Sub_OrgField, value) != true))
                {
                    this.Id_Sub_OrgField = value;
                    this.RaisePropertyChanged("Id_Sub_Org");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Inn
        {
            get
            {
                return this.InnField;
            }
            set
            {
                if ((this.InnField.Equals(value) != true))
                {
                    this.InnField = value;
                    this.RaisePropertyChanged("Inn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Is_Main
        {
            get
            {
                return this.Is_MainField;
            }
            set
            {
                if ((this.Is_MainField.Equals(value) != true))
                {
                    this.Is_MainField = value;
                    this.RaisePropertyChanged("Is_Main");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kpp
        {
            get
            {
                return this.KppField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KppField, value) != true))
                {
                    this.KppField = value;
                    this.RaisePropertyChanged("Kpp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Legal_Form
        {
            get
            {
                return this.Legal_FormField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Legal_FormField, value) != true))
                {
                    this.Legal_FormField = value;
                    this.RaisePropertyChanged("Legal_Form");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Loginid
        {
            get
            {
                return this.LoginidField;
            }
            set
            {
                if ((this.LoginidField.Equals(value) != true))
                {
                    this.LoginidField = value;
                    this.RaisePropertyChanged("Loginid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Ogrn
        {
            get
            {
                return this.OgrnField;
            }
            set
            {
                if ((this.OgrnField.Equals(value) != true))
                {
                    this.OgrnField = value;
                    this.RaisePropertyChanged("Ogrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Okato
        {
            get
            {
                return this.OkatoField;
            }
            set
            {
                if ((this.OkatoField.Equals(value) != true))
                {
                    this.OkatoField = value;
                    this.RaisePropertyChanged("Okato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Okato_Jur
        {
            get
            {
                return this.Okato_JurField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Okato_JurField, value) != true))
                {
                    this.Okato_JurField = value;
                    this.RaisePropertyChanged("Okato_Jur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Okato_Phis
        {
            get
            {
                return this.Okato_PhisField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Okato_PhisField, value) != true))
                {
                    this.Okato_PhisField = value;
                    this.RaisePropertyChanged("Okato_Phis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Okopf
        {
            get
            {
                return this.OkopfField;
            }
            set
            {
                if ((this.OkopfField.Equals(value) != true))
                {
                    this.OkopfField = value;
                    this.RaisePropertyChanged("Okopf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Okpd2
        {
            get
            {
                return this.Okpd2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Okpd2Field, value) != true))
                {
                    this.Okpd2Field = value;
                    this.RaisePropertyChanged("Okpd2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Okpo
        {
            get
            {
                return this.OkpoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OkpoField, value) != true))
                {
                    this.OkpoField = value;
                    this.RaisePropertyChanged("Okpo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Okved_Code
        {
            get
            {
                return this.Okved_CodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Okved_CodeField, value) != true))
                {
                    this.Okved_CodeField = value;
                    this.RaisePropertyChanged("Okved_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Org_Id
        {
            get
            {
                return this.Org_IdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Org_IdField, value) != true))
                {
                    this.Org_IdField = value;
                    this.RaisePropertyChanged("Org_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Org_Location
        {
            get
            {
                return this.Org_LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Org_LocationField, value) != true))
                {
                    this.Org_LocationField = value;
                    this.RaisePropertyChanged("Org_Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Org_Scale
        {
            get
            {
                return this.Org_ScaleField;
            }
            set
            {
                if ((this.Org_ScaleField.Equals(value) != true))
                {
                    this.Org_ScaleField = value;
                    this.RaisePropertyChanged("Org_Scale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Orgname
        {
            get
            {
                return this.OrgnameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OrgnameField, value) != true))
                {
                    this.OrgnameField = value;
                    this.RaisePropertyChanged("Orgname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass
        {
            get
            {
                return this.PassField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PassField, value) != true))
                {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhoneField, value) != true))
                {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Reg_Date
        {
            get
            {
                return this.Reg_DateField;
            }
            set
            {
                if ((this.Reg_DateField.Equals(value) != true))
                {
                    this.Reg_DateField = value;
                    this.RaisePropertyChanged("Reg_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Reg_Gos_Date
        {
            get
            {
                return this.Reg_Gos_DateField;
            }
            set
            {
                if ((this.Reg_Gos_DateField.Equals(value) != true))
                {
                    this.Reg_Gos_DateField = value;
                    this.RaisePropertyChanged("Reg_Gos_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reg_Obj_Code
        {
            get
            {
                return this.Reg_Obj_CodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Reg_Obj_CodeField, value) != true))
                {
                    this.Reg_Obj_CodeField = value;
                    this.RaisePropertyChanged("Reg_Obj_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Responsible
        {
            get
            {
                return this.ResponsibleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ResponsibleField, value) != true))
                {
                    this.ResponsibleField = value;
                    this.RaisePropertyChanged("Responsible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Sc_Orgcontacttable
        {
            get
            {
                return this.Sc_OrgcontacttableField;
            }
            set
            {
                if ((this.Sc_OrgcontacttableField.Equals(value) != true))
                {
                    this.Sc_OrgcontacttableField = value;
                    this.RaisePropertyChanged("Sc_Orgcontacttable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Sep_Div
        {
            get
            {
                return this.Sep_DivField;
            }
            set
            {
                if ((this.Sep_DivField.Equals(value) != true))
                {
                    this.Sep_DivField = value;
                    this.RaisePropertyChanged("Sep_Div");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shortname
        {
            get
            {
                return this.ShortnameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ShortnameField, value) != true))
                {
                    this.ShortnameField = value;
                    this.RaisePropertyChanged("Shortname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sname
        {
            get
            {
                return this.SnameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SnameField, value) != true))
                {
                    this.SnameField = value;
                    this.RaisePropertyChanged("Sname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Subnumber
        {
            get
            {
                return this.SubnumberField;
            }
            set
            {
                if ((this.SubnumberField.Equals(value) != true))
                {
                    this.SubnumberField = value;
                    this.RaisePropertyChanged("Subnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ter_Ros
        {
            get
            {
                return this.Ter_RosField;
            }
            set
            {
                if ((object.ReferenceEquals(this.Ter_RosField, value) != true))
                {
                    this.Ter_RosField = value;
                    this.RaisePropertyChanged("Ter_Ros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UsernameField, value) != true))
                {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STATUS", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class STATUS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
    [System.SerializableAttribute()]
    public partial class FaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Ecours.Proxy.IServiceOrganization")]
    public interface IServiceOrganization
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/GetById", ReplyAction="http://tempuri.org/IServiceOrganization/GetByIdResponse")]
        Ecours.Proxy.EA_VC_ORGANIZATION GetById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/GetById", ReplyAction="http://tempuri.org/IServiceOrganization/GetByIdResponse")]
        System.Threading.Tasks.Task<Ecours.Proxy.EA_VC_ORGANIZATION> GetByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Get", ReplyAction="http://tempuri.org/IServiceOrganization/GetResponse")]
        System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION> Get(long fetch, long offset, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Get", ReplyAction="http://tempuri.org/IServiceOrganization/GetResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION>> GetAsync(long fetch, long offset, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Insert", ReplyAction="http://tempuri.org/IServiceOrganization/InsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ecours.Proxy.FaultMessage), Action="https://www.ecours.ru/FaultMessage", Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
        void Insert(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Insert", ReplyAction="http://tempuri.org/IServiceOrganization/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Update", ReplyAction="http://tempuri.org/IServiceOrganization/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ecours.Proxy.FaultMessage), Action="https://www.ecours.ru/FaultMessage", Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
        void Update(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Update", ReplyAction="http://tempuri.org/IServiceOrganization/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Delete", ReplyAction="http://tempuri.org/IServiceOrganization/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ecours.Proxy.FaultMessage), Action="https://www.ecours.ru/FaultMessage", Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Ecours.Utils.Excepting")]
        void Delete(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Delete", ReplyAction="http://tempuri.org/IServiceOrganization/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Test", ReplyAction="http://tempuri.org/IServiceOrganization/TestResponse")]
        bool Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/Test", ReplyAction="http://tempuri.org/IServiceOrganization/TestResponse")]
        System.Threading.Tasks.Task<bool> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/GetStatus", ReplyAction="http://tempuri.org/IServiceOrganization/GetStatusResponse")]
        System.Collections.Generic.List<Ecours.Proxy.STATUS> GetStatus(long fetch, long offset, string orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrganization/GetStatus", ReplyAction="http://tempuri.org/IServiceOrganization/GetStatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.STATUS>> GetStatusAsync(long fetch, long offset, string orderBy);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrganizationChannel : Ecours.Proxy.IServiceOrganization, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrganizationClient : System.ServiceModel.ClientBase<Ecours.Proxy.IServiceOrganization>, Ecours.Proxy.IServiceOrganization
    {
        
        public ServiceOrganizationClient()
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceOrganizationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceOrganizationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public Ecours.Proxy.EA_VC_ORGANIZATION GetById(long id)
        {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<Ecours.Proxy.EA_VC_ORGANIZATION> GetByIdAsync(long id)
        {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION> Get(long fetch, long offset, string orderBy)
        {
            return base.Channel.Get(fetch, offset, orderBy);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.EA_VC_ORGANIZATION>> GetAsync(long fetch, long offset, string orderBy)
        {
            return base.Channel.GetAsync(fetch, offset, orderBy);
        }
        
        public void Insert(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            base.Channel.Insert(ea_vc_organization);
        }
        
        public System.Threading.Tasks.Task InsertAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            return base.Channel.InsertAsync(ea_vc_organization);
        }
        
        public void Update(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            base.Channel.Update(ea_vc_organization);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            return base.Channel.UpdateAsync(ea_vc_organization);
        }
        
        public void Delete(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            base.Channel.Delete(ea_vc_organization);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Ecours.Proxy.EA_VC_ORGANIZATION ea_vc_organization)
        {
            return base.Channel.DeleteAsync(ea_vc_organization);
        }
        
        public bool Test()
        {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<bool> TestAsync()
        {
            return base.Channel.TestAsync();
        }
        
        public System.Collections.Generic.List<Ecours.Proxy.STATUS> GetStatus(long fetch, long offset, string orderBy)
        {
            return base.Channel.GetStatus(fetch, offset, orderBy);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Ecours.Proxy.STATUS>> GetStatusAsync(long fetch, long offset, string orderBy)
        {
            return base.Channel.GetStatusAsync(fetch, offset, orderBy);
        }
    }
}
